#  [제목]
#  - [직무] 타입: 제목(영역) 의 형식으로 작성
#  - 50자 이내 / 마침표 및 특수기호 사용 X / 현재형으로 작성
# 바로 밑줄에 작성
[] 
# 바로 아래 한 줄 공백 유지 (제목과 본문의 분리를 위함)

################################
#  [본문]
#  - 여러줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)
#  - 어떻게 보다는 ”왜”, “무엇을 위해” 작업했는지에 초점을 맞춰 작성 
#  바로 밑줄에 작성

#######🆁🅴🅼🅴🅱🅴🆁 🅼🅴######
# [타입 리스트]
# Feat	: 새로운 기능 추가
# Fix	: 버그 수정
# Docs	: 문서 수정
# Style	: 코드 formatting, 세미콜론 누락, 코드 자체의 변경이 없는 경우
# Refactor: 코드 리팩토링 / 내부 로직은 변경하지 않고 기존의 코드를 개선한 경우, 클래스명 수정&가독성을 위해 변수명을 변경한 경우도 포함
# Test	: 테스트 코드, 리팩토링 테스트 코드 추가
# Chore	: 패키지 매니저 수정, 그 외 기타 수정 ex) .gitignore / 위 경우에 포함되지 않는 기타 변경 사항
# Design	: CSS 등 사용자 UI 디자인 변경
# Comment: 필요한 주석 추가 및 변경
# Rename: 파일 또는 폴더 명을 수정하거나 옮기는 작업만인 경우
# Remove: 파일을 삭제하는 작업만 수행한 경우 / 코드, 파일을 삭제한 경우, 필요 없는 주석 삭제도 포함
# !BREAKING CHANGE	: 커다란 API 변경의 경우
# !HOTFIX: 급하게 치명적인 버그를 고쳐야 하는 경우
# Add	: feat 이외의 부수적인 코드, 라이브러리 등을 추가한 경우, 새로운 파일(Component나 Activity 등)을 생성한 경우도 포함
# Move: fix, refactor 등과 관계 없이 코드, 파일 등의 위치를 이동하는 작업만 수행한 경우
# ------------------
# [커밋 메시지 예시]
#  Fix: CardList 컴포넌트 클릭 시 공백으로 나오는 오류 수정
#
#  모바일 버전에서 CardList의 img 부분 클릭 시 공백으로 나오는 오류 수정.
#  PC 버전은 이상 없음.
# ------------------
# [우리 팀이 지켜야 할 보편적 규칙]
#  1. 언어는 한국어를 사용한다.
#    - 예외 사항) 최초 커밋 메시지는 “Initial commit”으로 한다.
#  2. 문장의 구성
#    1) 문장은 간결하게 구성한다.
#    2) 현재형을 사용한다.
#  3. 작성한 당사자가 아닌 제 3자가 이해할 수 있도록 작성한다.
#  4. 단순한 문장일수록 좋다.
# ------------------
# [우리 팀의 커밋 타이밍]
#  - 의미 있는 코드의 변화가 있다면 커밋을 진행한다.
#  - 의미가 있다면 사소한 것을 커밋 하는 것은 전혀 잘못된 것이 아니다.
#  - 다만 의미 없는 잦은 커밋은 히스토리 추적에 불편함을 주므로 의미 없는 커밋은 자제한다.
################################